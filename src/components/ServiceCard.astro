---
export interface Props {
	title: string;
	description: string;
	features: string[];
	ctaText: string;
	ctaLink: string;
	isEmergency?: boolean;
}

const { title, description, features, ctaText, ctaLink, isEmergency = false } = Astro.props;
---

<div class={`service-card ${isEmergency ? 'emergency' : ''}`}>
	<div class="card-header">
		<h3 class="card-title">{title}</h3>
		<p class="card-description">{description}</p>
	</div>
	
	<div class="features-list">
		<ul>
			{features.map(feature => (
				<li>{feature}</li>
			))}
		</ul>
	</div>
	
	<div class="card-footer">
		<a href={ctaLink} class={`cta-button ${isEmergency ? 'emergency' : ''}`}>
			{ctaText}
		</a>
	</div>
</div>

<style>
	.service-card {
		background: rgba(26, 26, 26, 0.6);
		border: 1px solid rgba(212, 175, 55, 0.2);
		border-radius: 12px;
		padding: 2rem;
		transition: all 0.3s ease;
		backdrop-filter: blur(10px);
		position: relative;
		overflow: hidden;
		display: flex;
		flex-direction: column;
		height: 100%;
	}

	.service-card.emergency {
		border-color: rgba(220, 20, 60, 0.4);
		background: rgba(26, 26, 26, 0.8);
	}

	.service-card::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: linear-gradient(135deg, rgba(212, 175, 55, 0.1) 0%, transparent 50%);
		opacity: 0;
		transition: opacity 0.3s ease;
		pointer-events: none;
	}

	.service-card.emergency::before {
		background: linear-gradient(135deg, rgba(220, 20, 60, 0.1) 0%, transparent 50%);
	}

	.service-card:hover {
		transform: translateY(-8px);
		border-color: rgba(212, 175, 55, 0.4);
		box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
	}

	.service-card.emergency:hover {
		border-color: rgba(220, 20, 60, 0.6);
	}

	.service-card:hover::before {
		opacity: 1;
	}

	.card-header {
		margin-bottom: 1.5rem;
	}

	.card-title {
		font-size: 1.4rem;
		font-weight: 600;
		color: var(--color-text);
		margin-bottom: 1rem;
		position: relative;
		z-index: 1;
	}

	.card-description {
		color: var(--color-text-secondary);
		line-height: 1.6;
		font-size: 1rem;
		position: relative;
		z-index: 1;
	}

	.features-list {
		flex-grow: 1;
		margin-bottom: 2rem;
	}

	.features-list ul {
		list-style: none;
		padding: 0;
		margin: 0;
	}

	.features-list li {
		color: var(--color-text-secondary);
		font-size: 0.95rem;
		line-height: 1.5;
		margin-bottom: 0.8rem;
		padding-left: 1.5rem;
		position: relative;
	}

	.features-list li::before {
		content: 'âœ“';
		position: absolute;
		left: 0;
		color: var(--color-accent-gold);
		font-weight: bold;
	}

	.service-card.emergency .features-list li::before {
		color: #dc143c;
	}

	.card-footer {
		margin-top: auto;
	}

	.cta-button {
		display: inline-block;
		width: 100%;
		padding: 0.8rem 1.5rem;
		background: transparent;
		color: var(--color-accent-gold);
		border: 2px solid var(--color-accent-gold);
		border-radius: 8px;
		text-decoration: none;
		font-weight: 600;
		font-size: 0.95rem;
		text-align: center;
		transition: all 0.3s ease;
		position: relative;
		z-index: 1;
	}

	.cta-button.emergency {
		color: #dc143c;
		border-color: #dc143c;
	}

	.cta-button:hover {
		background: var(--color-accent-gold);
		color: var(--color-bg);
		transform: translateY(-1px);
		box-shadow: 0 4px 12px rgba(212, 175, 55, 0.2);
	}

	.cta-button.emergency:hover {
		background: #dc143c;
		color: var(--color-text);
		transform: translateY(-1px);
		box-shadow: 0 4px 12px rgba(220, 20, 60, 0.2);
	}

	@media (max-width: 768px) {
		.service-card {
			padding: 1.5rem;
		}

		.card-title {
			font-size: 1.2rem;
		}

		.card-description {
			font-size: 0.95rem;
		}

		.features-list li {
			font-size: 0.9rem;
		}
	}
</style>