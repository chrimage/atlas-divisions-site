---
import Layout from '../layouts/Layout.astro';

// Simple Cloudflare Access auth function
function extractUserFromAccessToken(request: Request) {
    try {
        const userJWT = request.headers.get('Cf-Access-Jwt-Assertion');
        if (!userJWT) return null;
        
        const parts = userJWT.split('.');
        if (parts.length !== 3) return null;
        
        // Decode JWT payload
        const payload = parts[1];
        const base64 = payload.replace(/-/g, '+').replace(/_/g, '/');
        const paddedBase64 = base64.padEnd(base64.length + ((4 - (base64.length % 4)) % 4), '=');
        const decodedPayload = JSON.parse(atob(paddedBase64));
        
        // Check expiration
        if (decodedPayload.exp && decodedPayload.exp < Math.floor(Date.now() / 1000)) {
            return null;
        }
        
        return {
            email: decodedPayload.email,
            name: decodedPayload.name || decodedPayload.email
        };
    } catch (error) {
        console.error('Auth error:', error);
        return null;
    }
}

// HTML escaping utility for security
function escapeHtml(unsafe: string) {
    return unsafe
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&#039;");
}

// Check authentication
const user = extractUserFromAccessToken(Astro.request);

if (!user) {
    return new Response(`
        <!DOCTYPE html>
        <html><head><meta charset="UTF-8"><title>Access Denied</title>
        <style>
            body{font-family:Arial;background:#0a0a0a;color:#fff;text-align:center;padding:2rem;}
            .container{max-width:600px;margin:0 auto;background:rgba(26,26,26,0.95);padding:2rem;border-radius:12px;border:1px solid rgba(212,175,55,0.2);}
            h1{color:#dc143c;margin-bottom:1rem;}
        </style></head><body>
        <div class="container">
        <h1>🔒 Admin Access Required</h1>
        <p>Please authenticate through Cloudflare Access to view this page.</p>
        <p>Contact the administrator if you need access.</p>
        </div></body></html>
    `, { 
        status: 401,
        headers: { 
            'Content-Type': 'text/html; charset=utf-8',
            'X-Frame-Options': 'DENY',
            'X-Content-Type-Options': 'nosniff',
            'X-XSS-Protection': '1; mode=block'
        } 
    });
}

// Get submissions from database
const env = Astro.locals.runtime.env;
let submissions: any[] = [];

if (env.DB) {
    try {
        const { results } = await env.DB.prepare(`
            SELECT * FROM submissions ORDER BY created_at DESC
        `).all();
        submissions = results;
    } catch (error) {
        console.error('Database error:', error);
    }
}

// Handle status updates
if (Astro.request.method === 'POST') {
    const formData = await Astro.request.formData();
    const id = formData.get('id')?.toString();
    const status = formData.get('status')?.toString();
    
    if (id && status && ['new', 'in_progress', 'resolved', 'cancelled'].includes(status)) {
        try {
            await env.DB.prepare(`
                UPDATE submissions SET status = ?, updated_at = ? WHERE id = ?
            `).bind(status, new Date().toISOString(), id).run();
            
            // Redirect to refresh the page
            return Astro.redirect('/admin');
        } catch (error) {
            console.error('Update error:', error);
        }
    }
}
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Atlas Divisions - Admin Panel</title>
    <style>
        :root {
            --color-bg: #0a0a0a;
            --color-bg-secondary: #1a1a1a;
            --color-text: #ffffff;
            --color-text-secondary: #b8b8b8;
            --color-accent-gold: #d4af37;
            --color-accent-teal: #008080;
            --emergency-red: #dc143c;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background: var(--color-bg);
            color: var(--color-text);
            padding: 1rem;
            margin: 0;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .back {
            margin-bottom: 1rem;
        }

        h1 {
            color: var(--color-accent-gold);
            margin-bottom: 0.5rem;
        }

        .stats {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
            flex-wrap: wrap;
        }

        .stat-card {
            background: rgba(26, 26, 26, 0.95);
            padding: 1rem;
            border-radius: 8px;
            border: 1px solid rgba(212, 175, 55, 0.2);
            min-width: 120px;
        }

        .stat-number {
            font-size: 1.5rem;
            font-weight: bold;
            color: var(--color-accent-gold);
        }

        .stat-label {
            font-size: 0.875rem;
            color: var(--color-text-secondary);
        }

        .user-info {
            background: rgba(212, 175, 55, 0.1);
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 2rem;
            color: var(--color-accent-gold);
        }

        .table-container {
            overflow-x: auto;
            background: rgba(26, 26, 26, 0.95);
            border-radius: 8px;
            border: 1px solid rgba(212, 175, 55, 0.2);
        }

        table {
            width: 100%;
            border-collapse: collapse;
            min-width: 900px;
        }

        th, td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid rgba(212, 175, 55, 0.1);
        }

        th {
            background: rgba(212, 175, 55, 0.1);
            color: var(--color-accent-gold);
            font-weight: 600;
            position: sticky;
            top: 0;
        }

        tr:hover {
            background: rgba(212, 175, 55, 0.05);
        }

        .message-cell {
            max-width: 200px;
            position: relative;
        }

        .message-preview {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            font-style: italic;
            color: var(--color-text-secondary);
        }

        .phone-cell {
            color: var(--color-text-secondary);
        }

        .no-data {
            color: #666;
            font-style: italic;
        }

        .status {
            padding: 0.4rem 0.8rem;
            border-radius: 4px;
            font-size: 0.875rem;
            font-weight: 500;
            text-transform: uppercase;
        }

        .status-new {
            background: #e67e22;
            color: white;
        }

        .status-in_progress {
            background: #3498db;
            color: white;
        }

        .status-resolved {
            background: #27ae60;
            color: white;
        }

        .status-cancelled {
            background: #e74c3c;
            color: white;
        }

        .btn {
            background: var(--color-accent-teal);
            color: white;
            padding: 0.5rem 1rem;
            text-decoration: none;
            border-radius: 4px;
            font-size: 0.875rem;
            border: none;
            cursor: pointer;
        }

        .btn:hover {
            background: #006666;
        }

        .email {
            color: var(--color-accent-gold);
            text-decoration: none;
        }

        .email:hover {
            text-decoration: underline;
        }

        .action-form {
            display: flex;
            gap: 0.5rem;
            align-items: center;
        }

        .status-select {
            background: var(--color-bg-secondary);
            color: var(--color-text);
            border: 1px solid rgba(212, 175, 55, 0.2);
            padding: 0.4rem;
            border-radius: 4px;
            font-size: 0.875rem;
        }

        .update-btn {
            background: var(--color-accent-teal);
            color: white;
            border: none;
            padding: 0.4rem 0.8rem;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.875rem;
        }

        .update-btn:hover {
            background: #006666;
        }

        .empty-state {
            text-align: center;
            padding: 3rem;
            color: var(--color-text-secondary);
        }

        .empty-state h3 {
            color: var(--color-accent-gold);
            margin-bottom: 1rem;
        }

        .empty-state a {
            color: var(--color-accent-teal);
            text-decoration: none;
        }

        .empty-state a:hover {
            text-decoration: underline;
        }

        .message-expand-btn {
            background: var(--color-accent-teal);
            color: white;
            border: none;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.75rem;
            margin-left: 0.5rem;
        }

        .message-expand-btn:hover {
            background: #006666;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background: rgba(26, 26, 26, 0.98);
            margin: 5% auto;
            padding: 2rem;
            border: 1px solid rgba(212, 175, 55, 0.3);
            border-radius: 12px;
            width: 90%;
            max-width: 700px;
            max-height: 80vh;
            overflow-y: auto;
            position: relative;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            border-bottom: 1px solid rgba(212, 175, 55, 0.2);
            padding-bottom: 1rem;
        }

        .modal-title {
            color: var(--color-accent-gold);
            font-size: 1.25rem;
            margin: 0;
        }

        .modal-close {
            background: none;
            border: none;
            color: var(--color-text-secondary);
            font-size: 1.5rem;
            cursor: pointer;
            padding: 0;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-close:hover {
            color: var(--color-accent-gold);
        }

        .modal-body {
            color: var(--color-text);
            line-height: 1.6;
        }

        .submission-details {
            display: grid;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .detail-item {
            background: rgba(212, 175, 55, 0.05);
            padding: 1rem;
            border-radius: 8px;
            border-left: 3px solid var(--color-accent-gold);
        }

        .detail-label {
            font-weight: 600;
            color: var(--color-accent-gold);
            margin-bottom: 0.5rem;
        }

        .detail-value {
            color: var(--color-text);
            word-wrap: break-word;
        }

        .message-content {
            background: rgba(0, 128, 128, 0.1);
            padding: 1.5rem;
            border-radius: 8px;
            border: 1px solid rgba(0, 128, 128, 0.2);
            white-space: pre-wrap;
            word-wrap: break-word;
            line-height: 1.6;
        }

        @media (max-width: 768px) {
            .stats {
                flex-direction: column;
            }
            .stat-card {
                min-width: auto;
            }
            th, td {
                padding: 0.5rem;
                font-size: 0.875rem;
            }
            .message-cell {
                max-width: 120px;
            }
            .modal-content {
                margin: 2% auto;
                width: 95%;
                padding: 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="back">
            <a href="/" class="btn">← Back to Homepage</a>
        </div>
        <div class="user-info">
            👤 Logged in as: {user.name} ({user.email})
        </div>
        <h1>📋 Contact Submissions</h1>
        <div class="stats">
            <div class="stat-card">
                <div class="stat-number">{submissions.length}</div>
                <div class="stat-label">Total</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">{submissions.filter(s => (s.status || 'new') === 'new').length}</div>
                <div class="stat-label">New</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">{submissions.filter(s => s.status === 'in_progress').length}</div>
                <div class="stat-label">In Progress</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">{submissions.filter(s => s.status === 'resolved').length}</div>
                <div class="stat-label">Resolved</div>
            </div>
        </div>
        
        {submissions.length === 0 ? (
            <div class="empty-state">
                <h3>No submissions yet</h3>
                <p>Waiting for the first contact form submission...</p>
                <a href="/">Test Contact Form</a>
            </div>
        ) : (
            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Service</th>
                            <th>Message</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {submissions.map(sub => (
                            <tr>
                                <td>{new Date(sub.created_at).toLocaleDateString()}</td>
                                <td>{sub.name}</td>
                                <td>
                                    {sub.email ? (
                                        <a href={`mailto:${sub.email}`} class="email">{sub.email}</a>
                                    ) : (
                                        <span class="no-data">N/A</span>
                                    )}
                                </td>
                                <td class="phone-cell">
                                    {sub.phone ? sub.phone : <span class="no-data">N/A</span>}
                                </td>
                                <td>{sub.service_type}</td>
                                <td class="message-cell">
                                    <div class="message-preview">
                                        {sub.message.substring(0, 50)}{sub.message.length > 50 ? '...' : ''}
                                    </div>
                                    {sub.message.length > 50 && (
                                        <button class="message-expand-btn" onclick={`showMessageModal('${sub.id}')`}>
                                            Read More
                                        </button>
                                    )}
                                </td>
                                <td>
                                    <span class={`status status-${sub.status || 'new'}`}>
                                        {(sub.status || 'new').replace('_', ' ')}
                                    </span>
                                </td>
                                <td>
                                    <form class="action-form" method="POST" action="/admin">
                                        <input type="hidden" name="id" value={sub.id} />
                                        <select name="status" class="status-select" onchange="this.form.submit()">
                                            <option value="new" selected={sub.status === 'new' || !sub.status}>New</option>
                                            <option value="in_progress" selected={sub.status === 'in_progress'}>In Progress</option>
                                            <option value="resolved" selected={sub.status === 'resolved'}>Resolved</option>
                                            <option value="cancelled" selected={sub.status === 'cancelled'}>Cancelled</option>
                                        </select>
                                    </form>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
        )}

        <!-- Message Detail Modal -->
        <div id="messageModal" class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Submission Details</h3>
                    <button class="modal-close" onclick="closeMessageModal()">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="submission-details">
                        <div class="detail-item">
                            <div class="detail-label">From:</div>
                            <div class="detail-value" id="modal-name"></div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">Email:</div>
                            <div class="detail-value" id="modal-email"></div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">Phone:</div>
                            <div class="detail-value" id="modal-phone"></div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">Service Type:</div>
                            <div class="detail-value" id="modal-service"></div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">Date:</div>
                            <div class="detail-value" id="modal-date"></div>
                        </div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Message:</div>
                        <div class="message-content" id="modal-message"></div>
                    </div>
                </div>
            </div>
        </div>

        <script define:vars={{ submissions }}>
            // Store submission data for modal
            const submissionData = submissions.map(sub => ({
                id: sub.id,
                name: sub.name,
                email: sub.email || 'N/A',
                phone: sub.phone || 'N/A', 
                service_type: sub.service_type,
                message: sub.message,
                created_at: sub.created_at
            }));

            function showMessageModal(submissionId) {
                const submission = submissionData.find(s => s.id === submissionId);
                if (!submission) return;
                
                document.getElementById('modal-name').textContent = submission.name;
                document.getElementById('modal-email').textContent = submission.email;
                document.getElementById('modal-phone').textContent = submission.phone;
                document.getElementById('modal-service').textContent = submission.service_type;
                document.getElementById('modal-date').textContent = new Date(submission.created_at).toLocaleDateString();
                document.getElementById('modal-message').textContent = submission.message;
                
                document.getElementById('messageModal').style.display = 'block';
                document.body.style.overflow = 'hidden'; // Prevent background scrolling
            }

            function closeMessageModal() {
                document.getElementById('messageModal').style.display = 'none';
                document.body.style.overflow = 'auto';
            }

            // Close modal when clicking outside
            window.onclick = function(event) {
                const modal = document.getElementById('messageModal');
                if (event.target === modal) {
                    closeMessageModal();
                }
            }

            // Close modal with escape key
            document.addEventListener('keydown', function(event) {
                if (event.key === 'Escape') {
                    closeMessageModal();
                }
            });
        </script>
    </div>
</body>
</html>